/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.28
 * Generated at: 2024-09-23 03:48:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class mapTest_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta name=\"viewport\"\r\n");
      out.write("	content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no\">\r\n");
      out.write("<title>ì§ì­ ê²ì</title>\r\n");
      out.write("<style>\r\n");
      out.write("/* ì ì²´ ë ì´ìì */\r\n");
      out.write(".container {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	margin-top: 50px;\r\n");
      out.write("}\r\n");
      out.write("/* ì§ë ìì­ ì¤íì¼ */\r\n");
      out.write("#map {\r\n");
      out.write("	width: 500px;\r\n");
      out.write("	height: 400px;\r\n");
      out.write("	border: 5px solid #6FBAFF;\r\n");
      out.write("	border-radius: 10px;\r\n");
      out.write("}\r\n");
      out.write("/* ê´ê´ ëªì ë¦¬ì¤í¸ ìì­ ì¤íì¼ */\r\n");
      out.write(".sidebar {\r\n");
      out.write("	margin-left: 30px;\r\n");
      out.write("	padding: 20px;\r\n");
      out.write("	width: 300px;\r\n");
      out.write("	height: 400px;\r\n");
      out.write("}\r\n");
      out.write("/* ê²ì ìì­ ì¤íì¼ */\r\n");
      out.write(".search-bar {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	background-color: #87CEEB;\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("	border-radius: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".search-bar input {\r\n");
      out.write("	width: 240px;\r\n");
      out.write("	padding: 5px;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	border: none;\r\n");
      out.write("	font-size: 16px;\r\n");
      out.write("	background-color: #87CEEB;\r\n");
      out.write("	color: white;\r\n");
      out.write("	font-size: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".search-bar button {\r\n");
      out.write("	background: none;\r\n");
      out.write("	border: none;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	font-size: 18px;\r\n");
      out.write("}\r\n");
      out.write("/* ì¸ê¸° ê´ê´ ëªì ëª©ë¡ ì¤íì¼ */\r\n");
      out.write(".popular-list {\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	padding: 0;\r\n");
      out.write("	list-style: none;\r\n");
      out.write("	border-top: none;\r\n");
      out.write("	border-radius: 0 0 10px 10px;\r\n");
      out.write("	height: 270px;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	flex-direction: column;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	padding-left: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".popular-list li {\r\n");
      out.write("	font-size: 16px;\r\n");
      out.write("	padding: 5px 0;\r\n");
      out.write("	border-bottom: 1px solid #ddd;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".popular-list li:last-child {\r\n");
      out.write("	border-bottom: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".footer-link {\r\n");
      out.write("	text-align: right;\r\n");
      out.write("	padding-right: 10px;\r\n");
      out.write("	margin-top: 10px;\r\n");
      out.write("	font-size: 14px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".footer-link a {\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	color: #4682B4;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("	src=\"https://oapi.map.naver.com/openapi/v3/maps.js?ncpClientId=8p05x3m14j\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<!-- ì§ë ìì­ -->\r\n");
      out.write("		<div id=\"map\"></div>\r\n");
      out.write("\r\n");
      out.write("		<!-- ê´ê´ ëªì ë¦¬ì¤í¸ ìì­ -->\r\n");
      out.write("		<div class=\"sidebar\">\r\n");
      out.write("			<!-- ì§ì­ ê²ì ì ëª©ê³¼ ê²ì ìì´ì½ -->\r\n");
      out.write("			<div class=\"search-bar\">\r\n");
      out.write("				<input type=\"text\" placeholder=\"ì§ì­ ê²ì\">\r\n");
      out.write("				<button>ð</button>\r\n");
      out.write("			</div>\r\n");
      out.write("			<h2 align=\"center\">ì¸ê¸° ê´ê´ ëªì</h2>\r\n");
      out.write("			<!-- ì¸ê¸° ê´ê´ ëªì ë¦¬ì¤í¸ -->\r\n");
      out.write("			<ul class=\"popular-list\">\r\n");
      out.write("				<li>1ì.</li>\r\n");
      out.write("				<li>1ì.</li>\r\n");
      out.write("				<li>1ì.</li>\r\n");
      out.write("				<li>1ì.</li>\r\n");
      out.write("				<li>1ì.</li>\r\n");
      out.write("				<li>1ì.</li>\r\n");
      out.write("			</ul>\r\n");
      out.write("\r\n");
      out.write("			<!-- ê³ì ë³ ê´ê´ì§ ë³´ê¸° ë§í¬ -->\r\n");
      out.write("			<div class=\"footer-link\">\r\n");
      out.write("				<a href=\"#\">ê³ì ë³ ê´ê´ì§ ë³´ë¬ê°ê¸° &gt;</a>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("		var mapOptions = {\r\n");
      out.write("			center : new naver.maps.LatLng(37.3595704, 127.105399),\r\n");
      out.write("			zoom : 10\r\n");
      out.write("		};\r\n");
      out.write("\r\n");
      out.write("		var map = new naver.maps.Map('map', mapOptions);\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
