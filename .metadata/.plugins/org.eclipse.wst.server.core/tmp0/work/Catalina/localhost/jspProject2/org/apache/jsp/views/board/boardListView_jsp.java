/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.28
 * Generated at: 2024-09-20 06:15:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.board;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.kh.common.PageInfo;
import java.util.ArrayList;
import com.kh.board.model.vo.Board;
import com.kh.member.model.vo.Member;

public final class boardListView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar", Long.valueOf(1726099923522L));
    _jspx_dependants.put("/views/common/menubar.jsp", Long.valueOf(1726799993274L));
    _jspx_dependants.put("jar:file:/C:/workspace/7_JSP/jspProject2/src/main/webapp/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar!/META-INF/c-1_2.tld", Long.valueOf(1664421078000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(6);
    _jspx_imports_classes.add("com.kh.common.PageInfo");
    _jspx_imports_classes.add("com.kh.board.model.vo.Board");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("com.kh.member.model.vo.Member");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

    PageInfo pi = (PageInfo)request.getAttribute("pi");
    ArrayList<Board> list = (ArrayList<Board>)request.getAttribute("list");

    int currentPage = pi.getCurrentPage();
    int startPage = pi.getStartPage();
    int endPage = pi.getEndPage();
    int maxPage = pi.getMaxPage();

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>일반게시판</title>\r\n");
      out.write("\r\n");
      out.write("    <style>\r\n");
      out.write("        .outer{\r\n");
      out.write("            background: black;\r\n");
      out.write("            color: white;\r\n");
      out.write("            width: 1000px;\r\n");
      out.write("            margin: auto;\r\n");
      out.write("            margin-top: 50px;\r\n");
      out.write("            padding: 10px 0px 50px 0px;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("\r\n");

	String contextPath = request.getContextPath();

	Member loginUser = (Member)session.getAttribute("loginUser");
	// 로그인 시도 전: null
	// 로그인 성공 후 : 로그인 성공한 user정보
	
	String alertMsg = (String)session.getAttribute("alertMsg");
	// 서비스 요청 전 : null
	// 서비스 요청 후 : alert 띄워줄 메세지 문구

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <!-- jQuery -->\r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\"\r\n");
      out.write("            integrity=\"sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=\"\r\n");
      out.write("            crossorigin=\"anonymous\"></script>\r\n");
      out.write("    <script\r\n");
      out.write("            src=\"https://code.jquery.com/ui/1.14.0/jquery-ui.min.js\"\r\n");
      out.write("            integrity=\"sha256-Fb0zP4jE3JHqu+IBB9YktLcSjI1Zc6J2b6gTjB0LpoM=\"\r\n");
      out.write("            crossorigin=\"anonymous\"></script>\r\n");
      out.write("    <!-- Latest compiled and minified CSS -->\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("    <!-- Latest compiled JavaScript -->\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("    <title>Insert title here</title>\r\n");
      out.write("\r\n");
      out.write("    <style>\r\n");
      out.write("        a {\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            color: black;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .login-area > * {\r\n");
      out.write("            float: right;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .nav-area {\r\n");
      out.write("            background-color: black;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .menu {\r\n");
      out.write("            display: table-cell;\r\n");
      out.write("            width: 150px;\r\n");
      out.write("            height: 50px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .menu a {\r\n");
      out.write("            color: white;\r\n");
      out.write("            font-size: 20px;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            height: 100%;\r\n");
      out.write("            display: block;\r\n");
      out.write("            line-height: 50px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .login-area input[type=\"button\"],\r\n");
      out.write("        .login-area input[type=\"submit\"] {\r\n");
      out.write("            width: 50%;\r\n");
      out.write("            float: left;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	");
 if(alertMsg != null) {
      out.write("\r\n");
      out.write("		<script>\r\n");
      out.write("			alert(\"");
      out.print(alertMsg);
      out.write("\");\r\n");
      out.write("		</script>\r\n");
      out.write("		");
 session.removeAttribute("alertMsg"); 
      out.write('\r');
      out.write('\n');
      out.write('	');
 } 
      out.write("\r\n");
      out.write("    <h1 align=\"center\">Welcome KH World</h1>\r\n");
      out.write("    <div class=\"login-area\">\r\n");
      out.write("        <!--로그인 전-->\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("        ");
      //  c:choose
      org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
      boolean _jspx_th_c_005fchoose_005f0_reused = false;
      try {
        _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fchoose_005f0.setParent(null);
        int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
        if (_jspx_eval_c_005fchoose_005f0 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("        	");
            //  c:when
            org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
            boolean _jspx_th_c_005fwhen_005f0_reused = false;
            try {
              _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
              _jspx_th_c_005fwhen_005f0.setParent((jakarta.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
              // /views/common/menubar.jsp(86,9) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty loginUser }", boolean.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
              int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
              if (_jspx_eval_c_005fwhen_005f0 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
                do {
                  out.write("\r\n");
                  out.write("		        <form action=\"");
                  out.print(contextPath );
                  out.write("/login.me\" method=\"post\">\r\n");
                  out.write("		            <table>\r\n");
                  out.write("		                <tr>\r\n");
                  out.write("		                    <th>아이디</th>\r\n");
                  out.write("		                    <td><input type=\"text\" name=\"userId\" required></td>\r\n");
                  out.write("		                </tr>\r\n");
                  out.write("		                <tr>\r\n");
                  out.write("		                    <th>비밀번호</th>\r\n");
                  out.write("		                    <td><input type=\"password\" name=\"userPwd\" required></td>\r\n");
                  out.write("		                </tr>\r\n");
                  out.write("		                <tr>\r\n");
                  out.write("		                    <th colspan=\"2\">\r\n");
                  out.write("		                        <input type=\"submit\" value=\"로그인\">\r\n");
                  out.write("		                        <input type=\"button\" value=\"회원가입\" onclick=\"enrollPage();\">\r\n");
                  out.write("		                    </th>\r\n");
                  out.write("		                </tr>\r\n");
                  out.write("		            </table>\r\n");
                  out.write("		            <script>\r\n");
                  out.write("		            	function enrollPage(){\r\n");
                  out.write("		            		//location.href = \"");
                  out.print(contextPath);
                  out.write("/views/member/memberEnrollForm.jsp\";\r\n");
                  out.write("		            		//웹 애플리케이션의 디렉토리 구조가 url에 노출되면 보안에 취약\r\n");
                  out.write("		            		\r\n");
                  out.write("		            		location.href = \"");
                  out.print(contextPath);
                  out.write("/enrollForm.me\";\r\n");
                  out.write("		            		//단순한 페이지 요청도 servlet을 거쳐갈 것(즉, url에는 서블릿 맵핑값만 나타나도록)\r\n");
                  out.write("		            	}\r\n");
                  out.write("		            </script>\r\n");
                  out.write("		        </form> \r\n");
                  out.write("	        ");
                  int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
                  if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
              }
              if (_jspx_th_c_005fwhen_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
              _jspx_th_c_005fwhen_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
            }
            out.write("\r\n");
            out.write("	        ");
            //  c:otherwise
            org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
            boolean _jspx_th_c_005fotherwise_005f0_reused = false;
            try {
              _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
              _jspx_th_c_005fotherwise_005f0.setParent((jakarta.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
              int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
              if (_jspx_eval_c_005fotherwise_005f0 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
                do {
                  out.write("\r\n");
                  out.write("        ");
                  out.write(" \r\n");
                  out.write("        <!--로그인 후-->\r\n");
                  out.write("		        <div>\r\n");
                  out.write("		            <b>");
                  out.print(loginUser.getUserName() );
                  out.write("님</b>의 방문을 환영합니다<br><br>\r\n");
                  out.write("		            <div>\r\n");
                  out.write("		                <a href=\"");
                  out.print(contextPath );
                  out.write("/myPage.me\">마이페이지</a>\r\n");
                  out.write("		                <a href=\"");
                  out.print(contextPath );
                  out.write("/logout.me\">로그아웃</a>\r\n");
                  out.write("		            </div>\r\n");
                  out.write("		        </div>\r\n");
                  out.write("        ");
                  out.write("\r\n");
                  out.write("       	 	");
                  int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
                  if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
              }
              if (_jspx_th_c_005fotherwise_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
              _jspx_th_c_005fotherwise_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
            }
            out.write("\r\n");
            out.write("        ");
            int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
            if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fchoose_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
        _jspx_th_c_005fchoose_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
      }
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <br clear=\"both\">\r\n");
      out.write("    <div class=\"nav-area\">\r\n");
      out.write("        <div class=\"menu\"><a href=\"");
      out.print(contextPath );
      out.write("\">HOME</a></div>\r\n");
      out.write("        <div class=\"menu\"><a href=\"\">공지사항</a></div>\r\n");
      out.write("        <div class=\"menu\"><a href=\"");
      out.print(contextPath );
      out.write("/list.bo?cpage=1\">일반게시판</a></div>\r\n");
      out.write("        <div class=\"menu\"><a href=\"\">사진게시판</a></div>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"outer\">\r\n");
      out.write("        <br>\r\n");
      out.write("        <h2 align=\"center\">일반 게시판</h2>\r\n");
      out.write("        <br>\r\n");
      out.write("        <table align=\"center\" border=\"1\">\r\n");
      out.write("            <thead align=\"center\">\r\n");
      out.write("                <th width=\"70\">글번호</th>\r\n");
      out.write("                <th width=\"80\">카테고리</th>\r\n");
      out.write("                <th width=\"300\">제목</th>\r\n");
      out.write("                <th width=\"100\">작성자</th>\r\n");
      out.write("                <th width=\"50\">조회수</th>\r\n");
      out.write("                <th width=\"100\">작성일</th>\r\n");
      out.write("            </thead>\r\n");
      out.write("            <tbody align=\"center\">\r\n");
      out.write("                ");
 if(list.isEmpty()) { 
      out.write("\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <td colspan=\"6\">존재하는 게시글이 없습니다.</td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                ");
 } else { 
      out.write("\r\n");
      out.write("                    ");
 for(Board b : list) { 
      out.write("\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <td>");
      out.print(b.getBoardNo());
      out.write("</td>\r\n");
      out.write("                            <td>");
      out.print(b.getCategory());
      out.write("</td>\r\n");
      out.write("                            <td>");
      out.print(b.getBoardTitle());
      out.write("</td>\r\n");
      out.write("                            <td>");
      out.print(b.getBoardWriter());
      out.write("</td>\r\n");
      out.write("                            <td>");
      out.print(b.getCount());
      out.write("</td>\r\n");
      out.write("                            <td>");
      out.print(b.getCreateDate());
      out.write("</td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                    ");
 } 
      out.write("\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("            </tbody>\r\n");
      out.write("        </table>\r\n");
      out.write("\r\n");
      out.write("        <br><br>\r\n");
      out.write("        <div align=\"center\">\r\n");
      out.write("            <button>&lt;</button>\r\n");
      out.write("            ");
 for(int p = startPage; p <= endPage; p++) { 
      out.write("\r\n");
      out.write("                ");
 if(p == currentPage) { 
      out.write("\r\n");
      out.write("                    <button disabled>");
      out.print(p);
      out.write("</button>\r\n");
      out.write("                ");
 } else {
      out.write("\r\n");
      out.write("                <button onclick=\"location.href='");
      out.print(contextPath);
      out.write("/list.bo?cpage=");
      out.print(p);
      out.write('\'');
      out.write('"');
      out.write('>');
      out.print(p);
      out.write("</button>\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("            <button>&gt;</button>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
